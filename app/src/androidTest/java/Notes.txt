**** Data Persistence *****

    Non-volatile memory is a memory that can be stored after device has been power cycled

    - Saving data to non volatile memory
    - Data is retained after application is closed

    4 Types of Data Persistence
        - Shared Preferences
        - Internal File Storage
        - External File Storage
        - Relational Database (SQLite)


    - Shared Preferences
      - Used typically for non-secure data
      - Shared Prefs is a file kept alongside the application APK
      - Shared Prefs uses key:value pairs
      - Only primitive types
      - Strings are allowed
      - To save data to shared preferences. you must go through the shraed preferences editor
        - Once the value is set in the editor you must either:
            - commit  - happens immediately and returns a boolean if the commit occured
            - apply   - happens asynchronously and doesn't have a return


       *) val editor = getSharedPreferences("shared_pref", Context.MODE_PRIVATE) // Keeps this
        sharedPref Private and not shared between other applications


 ***********************

    - Relational Databases (Grouping of data by their relations)
        - Relation Databases have:
            - Tables
            - columns
            - entries (entities)
            - foreign keys
            - primary keys

        - Generally (99% of the time) uses SQL as the defined structured language to interact
         with the database.

        CRUD operations and SQL
            C - CREATE    - Creating tables
            R - READ      - Getting data from Tables
            U - UPDATE    - Changing state of tables or entries
            D - DELETE    - Removal of entries



        Create)                         (PRIMARY KEY must be unique)
                 CREATE TABLE PERSON{
                      FirstName String,
                      LastName String PRIMARY KEY
                 }


        Read)
                SELECT * FROM PERSON     -  Get all entries and column values
                SELECT firstNAme FROM PERSON - Get all entries but onyly the firstNAme
                SELECT * FROM PERSON WHERE lastNAme = 'Hostkins' - Get ONLY entries with the last name Hoskins

        UPDATE)   - Changing state of tables or entries


        (Android has a method to handle update and delete for us)

************************

    - SQLite         ( Max size 140 terabytes)

      -SQLite is a very simplified
       Database Recourse Manager DBRM - (program that controls the database)
        - file per app
      -SQLite and Android practices
         -Generally broken into 2 separate parts
            -Database Contract
                -Query Strings
                -Column Names
                - Table Names
                - Database Name
                - etc
            - Database Helper
                - The database helper extends from the SQLiteOpenHelper

                - MUST override 2 methods
                    - onCreate
                        - Creates the tables
                        - only runs once unless invoked elsewhere
                    - onUpgrade
                        - Handles the updating of the database when the version of the database is changed
                        - Called when the current database version is not equal to current configuration
                    - Inserting and updating
                        - USes ContentValues which is a data container with key/ value association
                            - KEY = Col (Or Field)
                            - Value = value for that field
                    - Retrieving enteries from Database
                        - Cursor
                            - Iterable data container
                            - that holds all records retrieved from database query


